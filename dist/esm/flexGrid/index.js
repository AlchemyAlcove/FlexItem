import PropTypes from"prop-types";import React,{useState}from"react";import Style from"./flex.style";import{useTheme}from"@emotion/react";import{jsx as ___EmotionJSX}from"@emotion/react";const FlexGrid=props=>{function calcMaxPerRow(children){var _children$forEach;let max=0;return null===(_children$forEach=children.forEach)||void 0===_children$forEach?void 0:_children$forEach.call(children,child=>{var _child$props$size,_child$props;max+=null!==(_child$props$size=null===child||void 0===child||null===(_child$props=child.props)||void 0===_child$props?void 0:_child$props.size)&&void 0!==_child$props$size?_child$props$size:1}),max||1}const theme=useTheme(),[maxPerRow]=useState(()=>calcMaxPerRow(props.children)),classes=["flex-grid",props.container&&"flex-grid-container",props.verticalContainer&&"flex-grid-vertical-container",props.className].filter(Boolean).join(" ");return ___EmotionJSX(Style,{className:classes,css:props.style},React.Children.map(props.children,function(item){var _item$type;if(React.isValidElement(item)&&"FlexItem"===(null===(_item$type=item.type)||void 0===_item$type?void 0:_item$type.displayName)){const childProps={...item.props,isParentContainer:props.container};return childProps.maxPerRow=props.maxPerRow||maxPerRow,"mobile"===theme.aspect?childProps.maxPerRow=props.maxMobileRow:"tablet"===theme.aspect&&(childProps.maxPerRow=props.maxTabletRow),___EmotionJSX(item.type,childProps)}return item}))};FlexGrid.displayName="FlexGrid",FlexGrid.propTypes={className:PropTypes.string,container:PropTypes.bool,maxMobileRow:PropTypes.number,maxPerRow:PropTypes.number,maxTabletRow:PropTypes.number,style:PropTypes.object,verticalContainer:PropTypes.bool},FlexGrid.defaultProps={className:"",container:!1,maxMobileRow:1,maxTabletRow:1,style:{},verticalContainer:!1};export default FlexGrid;