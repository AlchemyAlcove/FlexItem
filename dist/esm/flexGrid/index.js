import _extends from"@babel/runtime/helpers/extends";import PropTypes from"prop-types";import React from"react";import Style from"./flex.style";import{isArray,isNil}from"lodash";import{withTheme}from"@emotion/react";import{jsx as ___EmotionJSX}from"@emotion/react";class FlexGrid extends React.Component{calcMaxPerRow(children){let max=0;return children.forEach(child=>{isNil(child)||isNil(child.props)||isNil(child.props.size)?!isNil(child)&&max++:max+=child.props.size}),max}renderItems(children){return isNil(children)?null:isArray(children)?children.map((element,index)=>this.renderItem(element,index,this.calcMaxPerRow(children))):this.renderItem(children,1,1)}renderItem(item,index,length){if(isNil(item))return null;if(isArray(item))return this.renderItems(item);else{const props={...item.props};if(!isNil(item.type)&&!isNil(item.type.displayName)){let maxPerRow=this.props.maxPerRow||length;"mobile"!==this.props.theme.aspect||isNil(this.props.maxMobileRow)?"tablet"===this.props.theme.aspect&&!isNil(this.props.maxTabletRow)&&(maxPerRow=this.props.maxTabletRow):maxPerRow=this.props.maxMobileRow,props.maxPerRow=maxPerRow}return ___EmotionJSX(item.type,_extends({key:index},props))}}render(){let classes="flex-grid";return this.props.container&&(classes+=" flex-grid-container"),this.props.verticalContainer&&(classes+=" flex-grid-vertical-container"),isNil(this.props.className)||(classes=classes+" "+this.props.className),___EmotionJSX(Style,{className:classes,style:this.props.style},this.renderItems(this.props.children))}}FlexGrid.propTypes={className:PropTypes.string,container:PropTypes.bool,maxMobileRow:PropTypes.number,maxPerRow:PropTypes.number,maxTabletRow:PropTypes.number,style:PropTypes.object,verticalContainer:PropTypes.bool},FlexGrid.defaultProps={className:"",container:!1,maxMobileRow:1,maxTabletRow:1,style:{},verticalContainer:!1};export default withTheme(FlexGrid);